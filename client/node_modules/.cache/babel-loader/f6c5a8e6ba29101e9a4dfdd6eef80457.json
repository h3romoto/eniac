{"ast":null,"code":"import { DISPLAY_ALERT, CLEAR_ALERT, REGISTER_USER_BEGIN, REGISTER_USER_ERROR, REGISTER_USER_SUCCESS, LOGIN_USER_BEGIN, LOGIN_USER_ERROR, LOGIN_USER_SUCCESS, TOGGLE_SIDEBAR, LOGOUT_USER, VM_BUILD_BEGIN, VM_BUILD_SUCCESS, VM_BUILD_ERROR, VM_CONNECT_BEGIN, VM_CONNECT_SUCCESS, VM_CONNECT_ERROR, VM_DESTROY_BEGIN, VM_DESTROY_SUCCESS, VM_DESTROY_ERROR } from \"./actions\";\nimport { initialState } from \"./\";\n\nconst reducer = (state, action) => {\n  if (action.type == VM_BUILD_BEGIN) {\n    return { ...state,\n      showAlert: true,\n      alertType: \"success\",\n      AlertText: \"Building your virtual machine ...\"\n    };\n  }\n\n  if (action.type == VM_BUILD_SUCCESS) {\n    return { ...state,\n      showAlert: true,\n      alertType: \"success\",\n      AlertText: \"Your virtual machine is ready ...\"\n    };\n  }\n\n  if (action.type == VM_BUILD_ERROR) {\n    return { ...state,\n      showAlert: true,\n      alertType: \"success\",\n      AlertText: \"Something went wrong while building your virtual machine ...\"\n    };\n  }\n\n  throw new Error(`No such action: ${action.type}`);\n};\n\nexport default reducer;","map":{"version":3,"names":["DISPLAY_ALERT","CLEAR_ALERT","REGISTER_USER_BEGIN","REGISTER_USER_ERROR","REGISTER_USER_SUCCESS","LOGIN_USER_BEGIN","LOGIN_USER_ERROR","LOGIN_USER_SUCCESS","TOGGLE_SIDEBAR","LOGOUT_USER","VM_BUILD_BEGIN","VM_BUILD_SUCCESS","VM_BUILD_ERROR","VM_CONNECT_BEGIN","VM_CONNECT_SUCCESS","VM_CONNECT_ERROR","VM_DESTROY_BEGIN","VM_DESTROY_SUCCESS","VM_DESTROY_ERROR","initialState","reducer","state","action","type","showAlert","alertType","AlertText","Error"],"sources":["/Users/khondo1/FAANG/Projects/eniac/client/src/context/reducer.js"],"sourcesContent":["import {\n  DISPLAY_ALERT,\n  CLEAR_ALERT,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_ERROR,\n  REGISTER_USER_SUCCESS,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_ERROR,\n  LOGIN_USER_SUCCESS,\n  TOGGLE_SIDEBAR,\n  LOGOUT_USER,\n  VM_BUILD_BEGIN,\n  VM_BUILD_SUCCESS,\n  VM_BUILD_ERROR,\n  VM_CONNECT_BEGIN,\n  VM_CONNECT_SUCCESS,\n  VM_CONNECT_ERROR,\n  VM_DESTROY_BEGIN,\n  VM_DESTROY_SUCCESS,\n  VM_DESTROY_ERROR,\n} from \"./actions\";\n\nimport { initialState } from \"./\";\n\nconst reducer = (state, action) => {\n  if (action.type == VM_BUILD_BEGIN) {\n    return {\n      ...state,\n      showAlert: true,\n      alertType: \"success\",\n      AlertText: \"Building your virtual machine ...\",\n    };\n  }\n\n  if (action.type == VM_BUILD_SUCCESS) {\n    return {\n      ...state,\n      showAlert: true,\n      alertType: \"success\",\n      AlertText: \"Your virtual machine is ready ...\",\n    };\n  }\n\n  if (action.type == VM_BUILD_ERROR) {\n    return {\n      ...state,\n      showAlert: true,\n      alertType: \"success\",\n      AlertText: \"Something went wrong while building your virtual machine ...\",\n    };\n  }\n\n  throw new Error(`No such action: ${action.type}`);\n};\n\nexport default reducer;\n"],"mappings":"AAAA,SACEA,aADF,EAEEC,WAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,qBALF,EAMEC,gBANF,EAOEC,gBAPF,EAQEC,kBARF,EASEC,cATF,EAUEC,WAVF,EAWEC,cAXF,EAYEC,gBAZF,EAaEC,cAbF,EAcEC,gBAdF,EAeEC,kBAfF,EAgBEC,gBAhBF,EAiBEC,gBAjBF,EAkBEC,kBAlBF,EAmBEC,gBAnBF,QAoBO,WApBP;AAsBA,SAASC,YAAT,QAA6B,IAA7B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,IAAIA,MAAM,CAACC,IAAP,IAAeb,cAAnB,EAAmC;IACjC,OAAO,EACL,GAAGW,KADE;MAELG,SAAS,EAAE,IAFN;MAGLC,SAAS,EAAE,SAHN;MAILC,SAAS,EAAE;IAJN,CAAP;EAMD;;EAED,IAAIJ,MAAM,CAACC,IAAP,IAAeZ,gBAAnB,EAAqC;IACnC,OAAO,EACL,GAAGU,KADE;MAELG,SAAS,EAAE,IAFN;MAGLC,SAAS,EAAE,SAHN;MAILC,SAAS,EAAE;IAJN,CAAP;EAMD;;EAED,IAAIJ,MAAM,CAACC,IAAP,IAAeX,cAAnB,EAAmC;IACjC,OAAO,EACL,GAAGS,KADE;MAELG,SAAS,EAAE,IAFN;MAGLC,SAAS,EAAE,SAHN;MAILC,SAAS,EAAE;IAJN,CAAP;EAMD;;EAED,MAAM,IAAIC,KAAJ,CAAW,mBAAkBL,MAAM,CAACC,IAAK,EAAzC,CAAN;AACD,CA7BD;;AA+BA,eAAeH,OAAf"},"metadata":{},"sourceType":"module"}